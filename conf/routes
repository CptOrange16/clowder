# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET     /                                 controllers.Application.index


# Users
GET     /users                            controllers.Users.list
GET     /users/by-country/:country        controllers.Users.listByCountry(country)
GET     /users/create/:username           controllers.Users.create(username)
GET     /users/view/:id                   controllers.Users.view(id)

# Files
GET		/files					          controllers.Files.list(when: String ?= "", date: String ?= "", size: Int ?= 11)
GET		/files/new					      controllers.Files.uploadFile
GET		/files/:id					      controllers.Files.file(id)
GET		/files/:id/blob			          controllers.Files.download(id)
POST    /upload					          controllers.Files.upload
POST    /uploadAjax						  controllers.Files.uploadAjax
#POST   /reactiveUpload					  controllers.Files.reactiveUpload

# Datasets
GET		/datasets					      controllers.Datasets.list(when: String ?= "", date: String ?= "", size: Int ?= 11)
GET     /datasets/new                     controllers.Datasets.newDataset
GET		/datasets/:id					  controllers.Datasets.dataset(id)
POST    /dataset/createDataset            controllers.Datasets.createDataset
POST    /dataset/submit                   controllers.Datasets.submit

# Tags
POST    /tags		                      controllers.Tags.tag

# Authentication
GET     /loginTest                        controllers.Authentication.login
POST    /loginTest                        controllers.Authentication.loginSubmit

# Search
GET    /search                            controllers.Search.search(query: String ?= "")
GET    /multimediasearch                  controllers.Search.multimediasearch
GET    /advanced						  controllers.Search.advanced
GET    /SearchByText					  controllers.Search.SearchByText
POST   /uploadquery						  controllers.Search.uploadquery

# Previewers
GET    /previewers/list                   controllers.Previewers.list	

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file                     controllers.Assets.at(path="/public", file)

# test json
GET		/test						      controllers.Application.testJson

## SecureSocial ##

# Login page
GET     /login                      securesocial.controllers.LoginPage.login
GET     /logout                     securesocial.controllers.LoginPage.logout

# User Registration
GET     /signup                     securesocial.controllers.Registration.startSignUp
POST    /signup                     securesocial.controllers.Registration.handleStartSignUp
GET     /signup/:token              securesocial.controllers.Registration.signUp(token)
POST    /signup/:token              securesocial.controllers.Registration.handleSignUp(token)
GET     /reset                      securesocial.controllers.Registration.startResetPassword
POST    /reset                      securesocial.controllers.Registration.handleStartResetPassword
GET     /reset/:token               securesocial.controllers.Registration.resetPassword(token)
POST    /reset/:token               securesocial.controllers.Registration.handleResetPassword(token)
GET     /password                   securesocial.controllers.PasswordChange.page
POST    /password                   securesocial.controllers.PasswordChange.handlePasswordChange

# Providers entry points
GET     /authenticate/:provider     securesocial.controllers.ProviderController.authenticate(provider)
POST    /authenticate/:provider     securesocial.controllers.ProviderController.authenticateByPost(provider)
GET     /not-authorized             securesocial.controllers.ProviderController.notAuthorized

# Administration pages
GET     /admin                      controllers.Admin.main
GET     /admin/test                 controllers.Admin.test
GET     /admin/secureTest           controllers.Admin.secureTest
GET     /admin/reindexFiles         controllers.Admin.reindexFiles

# Javascript Endpoints
GET     /javascriptRoutes           controllers.Application.javascriptRoutes

# Rest API
GET     /api/files                        api.Files.list
POST    /api/files                        api.Files.upload
GET     /api/files/:id                    api.Files.download(id)
GET     /api/files/:id/metadata           api.Files.get(id)
POST    /api/files/:id/previews/:p_id     api.Files.attachPreview(id, p_id)

POST    /api/previews/:id/metadata        api.Previews.uploadMetadata(id)
GET     /api/previews/:id/metadata        api.Previews.getMetadata(id)
GET     /api/previews/:id                 api.Previews.download(id)
POST    /api/previews                     api.Previews.upload


POST    /api/indexes                      api.Indexes.index

POST    /api/sections                     api.Sections.add
GET     /api/sections/:id                 api.Sections.get(id)


